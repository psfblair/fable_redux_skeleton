{"version":3,"sources":["../../../app/Components.fs"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWK;AAXL;AAAA;AAAA;;AAWK;AAEA;AAbL;AAAA;AAAA;AAAA;;AAgBwB;AAAA;AAAA;;AACA;AAAA;AAAA;;AAJnB;;;;AAOD,4CAAc,2DAAd;;AACA,8CAAqB;AAAA;AAAkC,KAAvD;;AAKC;AAAA;AACD,yBAA+C,sBAA/C;AADO;;AAGK,iBACJ;AAAA;AAAA,6BACA,oBAgjBF;AAAA,wDA/iBqC;AAAA;AAAA,iBA+iBrC,mCA9iBmC,EA8iBnC;AAA6D,aAhjB3D,kBADA,EAijBF,8BA7iBI;AAAA;AAAA,aA6iBJ,KAAsC,4BAAtC,CAjjBE;AAAO;;AAJd;;AAUD,kCAwiBM;AAAA,8CAAgD,sCAAhD;AAAiG,KAxiBvG;;AAEA,sCACI;AAAA;AAAA,uBAAQ,mBAAR,EAqiBE,6CAAgD,sCAAhD,MApiBgC,aAoiBhC,EAriBF;AAAK,KADT","file":"Components.js","sourcesContent":["ï»¿module Components\n\nopen Fable.Import\nopen Fable.Import.JS\nopen Fable.Import.Browser\n\nmodule R = Fable.Helpers.React\nmodule Props = R.Props\nmodule Redux = Fable.Import.Redux\nmodule ReactRedux = Fable.Import.ReactRedux\n\ntype State = { Pair: string list }\n\ntype VotingProps = \n    { Store: Redux.Store; Children: Function option }\n        interface ReactRedux.Property with \n            member self.store with get () = Some self.Store\n            member self.children with get () = self.Children\n\n\nlet initialPair = [\"Trainspotting\"; \"28 Days Later\"];\nlet initialProps store = { Store = store; Children = None }\n\n\n// TODO How to do mixins: PureRenderMixin?\n// import PureRenderMixin from 'react-addons-pure-render-mixin'\ntype Voting(props) =\n    inherit R.Component<VotingProps, State>(props, { Pair = initialPair })\n\n    member self.render () =\n        let buttons = \n            self.state.Pair \n            |> List.map (fun entry -> R.button [Props.Key entry] [\n                                        R.h1 [] [unbox entry]])\n        R.div [Props.ClassName \"voting\"] buttons\n\nlet voting props = R.com<Voting,_,_> props []\n\nlet provider store = \n    let props = initialProps store\n    R.com<ReactRedux.Provider,_,_> props [voting props]\n\n"]}